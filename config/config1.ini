[data]
path_patients = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/synthetic_data_generation/patients.csv
path_organs = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/synthetic_data_generation/organs.csv
path_outcomes = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/synthetic_data_generation/outcomes.csv
path_outcomes_noiseless = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/synthetic_data_generation/outcomes_noiseless.csv
path_effects = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/synthetic_data_generation/effects.csv

[synthetic_data]
n = 400
m = 400
noise = 0
complexity = 2
only_factual = False
tab = 1

[evaluation]
parameter = tab
parameter_value = 1
split = True
split_proportion = 0.8
scale = False
trainfac = True
evalfac = False
learner_type = DoubleML()
learner = DRLearner()
outcome = eGFR
outcome_type = continuous
model = RandomForestRegressor()
clustering_type = kmeans
clustering_n_clusters = 5
metric = CATE
model_to_outcome = RandomForestRegressor()
model_y = RandomForestRegressor()
model_t = RandomForestClassifier()
model_propensity = RandomForestClassifier()
model_regression = RandomForestRegressor()
results_path = /cluster/work/medinfmk/STCS_swiss_transplant/AI_Organ_Transplant_Matching/code/code_ernesto/comet_cluster/Experiments/Experiment_TAB/results_experiment_1.h5

